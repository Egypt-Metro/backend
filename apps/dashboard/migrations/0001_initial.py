# Generated by Django 4.2.18 on 2025-03-16 00:36

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("stations", "0005_connectingstation"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ReportGeneration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("daily_passenger", "Daily Passenger Report"),
                            ("monthly_revenue", "Monthly Revenue Report"),
                            ("line_performance", "Line Performance Report"),
                            ("system_health", "System Health Report"),
                        ],
                        max_length=50,
                        verbose_name="Report Type",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="Start Date")),
                ("end_date", models.DateField(verbose_name="End Date")),
                (
                    "generated_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Generated At"
                    ),
                ),
                (
                    "file_path",
                    models.FilePathField(
                        blank=True,
                        max_length=500,
                        null=True,
                        path="C:\\GitHub\\backend\\reports",
                        recursive=True,
                        verbose_name="Report File Path",
                    ),
                ),
                (
                    "generated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Report Generation",
                "ordering": ["-generated_at"],
            },
        ),
        migrations.CreateModel(
            name="AdminMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        auto_now_add=True, db_index=True, verbose_name="Metric Date"
                    ),
                ),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("daily", "Daily Metrics"),
                            ("weekly", "Weekly Metrics"),
                            ("monthly", "Monthly Metrics"),
                        ],
                        default="daily",
                        max_length=10,
                        verbose_name="Metric Type",
                    ),
                ),
                (
                    "total_passengers",
                    models.PositiveIntegerField(
                        help_text="Total number of passengers for the period",
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Total Passengers",
                    ),
                ),
                (
                    "total_revenue",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total revenue generated",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Total Revenue",
                    ),
                ),
                (
                    "line_performance",
                    models.JSONField(
                        default=dict,
                        help_text="Detailed performance metrics per metro line",
                        verbose_name="Line Performance",
                    ),
                ),
            ],
            options={
                "verbose_name": "Admin Metric",
                "ordering": ["-date"],
                "unique_together": {("date", "metric_type")},
            },
        ),
        migrations.CreateModel(
            name="SystemAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Concise alert title",
                        max_length=255,
                        verbose_name="Alert Title",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Detailed alert information",
                        verbose_name="Alert Description",
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("info", "Information"),
                            ("warning", "Warning"),
                            ("critical", "Critical"),
                            ("emergency", "Emergency"),
                        ],
                        default="info",
                        max_length=20,
                        verbose_name="Alert Level",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created At"
                    ),
                ),
                (
                    "resolved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Resolved At"
                    ),
                ),
                (
                    "is_resolved",
                    models.BooleanField(default=False, verbose_name="Resolved"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "System Alert",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["is_resolved", "created_at"],
                        name="dashboard_s_is_reso_9f3fcc_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="RevenueMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        auto_now_add=True, db_index=True, verbose_name="Metric Date"
                    ),
                ),
                (
                    "period_type",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("yearly", "Yearly"),
                        ],
                        default="daily",
                        max_length=10,
                        verbose_name="Period Type",
                    ),
                ),
                (
                    "total_revenue",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total revenue generated",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Total Revenue",
                    ),
                ),
                (
                    "ticket_sales",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of tickets sold",
                        verbose_name="Ticket Sales",
                    ),
                ),
                (
                    "subscription_revenue",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Revenue from subscriptions",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Subscription Revenue",
                    ),
                ),
                (
                    "subscription_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of active subscriptions",
                        verbose_name="Subscription Count",
                    ),
                ),
                (
                    "avg_ticket_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Average ticket price",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Average Ticket Price",
                    ),
                ),
                (
                    "line",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="revenue_metrics",
                        to="stations.line",
                    ),
                ),
            ],
            options={
                "verbose_name": "Revenue Metric",
                "ordering": ["-date"],
                "indexes": [
                    models.Index(
                        fields=["date", "line"], name="dashboard_r_date_030b83_idx"
                    ),
                    models.Index(
                        fields=["period_type"], name="dashboard_r_period__d7cc78_idx"
                    ),
                ],
                "unique_together": {("date", "line", "period_type")},
            },
        ),
    ]
