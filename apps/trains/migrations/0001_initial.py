# Generated by Django 4.2.18 on 2025-02-22 23:47

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("stations", "0005_connectingstation"),
    ]

    operations = [
        migrations.CreateModel(
            name="Train",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "train_id",
                    models.BigIntegerField(
                        db_index=True,
                        help_text="Unique numeric identifier for the train",
                        unique=True,
                    ),
                ),
                ("number_of_cars", models.IntegerField(default=10)),
                ("has_air_conditioning", models.BooleanField(default=False)),
                (
                    "train_type",
                    models.CharField(
                        choices=[
                            ("AC", "Air Conditioned"),
                            ("NON_AC", "Non Air Conditioned"),
                        ],
                        default="NON_AC",
                        max_length=10,
                    ),
                ),
                (
                    "direction",
                    models.CharField(
                        choices=[
                            ("HELWAN", "Helwan"),
                            ("MARG", "El-Marg"),
                            ("SHOBRA", "Shobra El Kheima"),
                            ("MONIB", "El-Monib"),
                            ("ADLY", "Adly Mansour"),
                            ("KIT_KAT", "Kit Kat"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("IN_SERVICE", "In Service"),
                            ("DELAYED", "Delayed"),
                            ("MAINTENANCE", "Under Maintenance"),
                            ("OUT_OF_SERVICE", "Out of Service"),
                        ],
                        default="IN_SERVICE",
                        max_length=20,
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        decimal_places=6,
                        default=Decimal("0.000000"),
                        max_digits=9,
                        validators=[django.core.validators.DecimalValidator(9, 6)],
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        decimal_places=6,
                        default=Decimal("0.000000"),
                        max_digits=9,
                        validators=[django.core.validators.DecimalValidator(9, 6)],
                    ),
                ),
                ("speed", models.FloatField(default=0)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "current_station",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="current_trains",
                        to="stations.station",
                    ),
                ),
                (
                    "line",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="stations.line"
                    ),
                ),
                (
                    "next_station",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="incoming_trains",
                        to="stations.station",
                    ),
                ),
            ],
            options={
                "ordering": ["train_id"],
            },
        ),
        migrations.CreateModel(
            name="TrainCar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "car_number",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ]
                    ),
                ),
                ("capacity", models.IntegerField(default=180)),
                (
                    "current_load",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("is_operational", models.BooleanField(default=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "train",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cars",
                        to="trains.train",
                    ),
                ),
            ],
            options={
                "ordering": ["car_number"],
            },
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("arrival_time", models.TimeField()),
                ("departure_time", models.TimeField()),
                (
                    "day_type",
                    models.CharField(
                        choices=[
                            ("WEEKDAY", "Weekday"),
                            ("SATURDAY", "Saturday"),
                            ("SUNDAY", "Sunday"),
                            ("HOLIDAY", "Holiday"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "sequence_number",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "station",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="stations.station",
                    ),
                ),
                (
                    "train",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedules",
                        to="trains.train",
                    ),
                ),
            ],
            options={
                "ordering": ["sequence_number"],
            },
        ),
        migrations.CreateModel(
            name="CrowdMeasurement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("passenger_count", models.IntegerField()),
                (
                    "crowd_percentage",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ]
                    ),
                ),
                (
                    "confidence_score",
                    models.FloatField(
                        help_text="Confidence level of the measurement (0-1)",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ],
                    ),
                ),
                (
                    "measurement_method",
                    models.CharField(
                        choices=[
                            ("AI_CAMERA", "AI Camera Detection"),
                            ("WEIGHT_SENSOR", "Weight Sensor"),
                            ("MANUAL", "Manual Count"),
                            ("ESTIMATED", "AI Estimated"),
                        ],
                        help_text="Method used to measure crowd levels",
                        max_length=20,
                    ),
                ),
                (
                    "train_car",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="measurements",
                        to="trains.traincar",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="ActualSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("actual_arrival", models.DateTimeField(null=True)),
                ("actual_departure", models.DateTimeField(null=True)),
                ("delay_minutes", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ON_TIME", "On Time"),
                            ("DELAYED", "Delayed"),
                            ("CANCELLED", "Cancelled"),
                            ("SKIPPED", "Station Skipped"),
                            ("DIVERTED", "Train Diverted"),
                        ],
                        default="ON_TIME",
                        max_length=20,
                    ),
                ),
                ("reason", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "schedule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trains.schedule",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="traincar",
            index=models.Index(
                fields=["train", "car_number"], name="trains_trai_train_i_429d09_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="traincar",
            index=models.Index(
                fields=["is_operational"], name="trains_trai_is_oper_329dcd_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="traincar",
            unique_together={("train", "car_number")},
        ),
        migrations.AddIndex(
            model_name="train",
            index=models.Index(
                fields=["train_id"], name="trains_trai_train_i_be36ab_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="train",
            index=models.Index(
                fields=["line", "status"], name="trains_trai_line_id_1cbd44_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="train",
            index=models.Index(
                fields=["current_station"], name="trains_trai_current_a486a7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="schedule",
            index=models.Index(
                fields=["train", "day_type"], name="trains_sche_train_i_3f8118_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="schedule",
            index=models.Index(
                fields=["station", "arrival_time"],
                name="trains_sche_station_74b613_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="crowdmeasurement",
            index=models.Index(
                fields=["timestamp"], name="trains_crow_timesta_b9189c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="crowdmeasurement",
            index=models.Index(
                fields=["train_car", "timestamp"], name="trains_crow_train_c_6778e1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="crowdmeasurement",
            index=models.Index(
                fields=["measurement_method"], name="trains_crow_measure_c34a27_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="actualschedule",
            index=models.Index(
                fields=["schedule", "status"], name="trains_actu_schedul_bd871b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="actualschedule",
            index=models.Index(
                fields=["created_at"], name="trains_actu_created_f45a0a_idx"
            ),
        ),
    ]
